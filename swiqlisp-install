#!/bin/bash
# -*- page-delimiter: "^#" -*-

# Copyright © 2011 Sebastian D. Tennant <sdt@sebyte.me>
#
# This file is part of swiQlisp — site-wide Quicklisp.
#
# swiQlisp is free software: you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# swiQlisp is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# swiQlisp.  If not, see <http://www.gnu.org/licenses/>

# Commentary:
#
#  This script (swiqlisp-install) is the site-wide Quicklisp installation tool,
#  typically only used once.
#
#  Use the script swiqlisp to manage your site-wide Quicklisp installation on a
#  day-to-day basis.

set -e

source swiqlisp.rc
source swiqlisp-utils

#-----------------------------------------------------------------------------
# check command line args
if test "$LISP" = "-h" -o "$1" = "--help"; then usage; exit 1; fi
# check for root privs
if test $(id -u) -ne 0; then need_root; exit 1; fi
# set SWIQLISP_PATHNAME (used by lisp)  and maybe fix SWIQLISP_DIR
SWIQLISP_PATHNAME=$(ensure_trailing_slash $SWIQLISP_DIR)
SWIQLISP_DIR=$(ensure_no_trailing_slash $SWIQLISP_DIR)
if test $DEBUG = on; then echo "swiQlisp directory (SWIQLISP_DIR): $SWIQLISP_DIR"; fi
# test for user's' lisp
if test ! -x "$LISP"; then
    echo "$LISP not found. Aborting. (Tip: use absolute paths)."
    exit 1
fi

#-----------------------------------------------------------------------------
# setup for user's lisp
case $LISP in
    sbcl|/bin/sbcl|/usr/bin/sbcl|/usr/local/bin/sbcl)
	source swiqlisp-sbcl ;;
    # add other lisps here
    *)
	echo "Unknown lisp implementation; $LISP. Aborting."
	exit 1 ;;
esac

#-----------------------------------------------------------------------------
# prepare swiqlisp installation directory
mkdir -p $SWIQLISP_DIR
QUICKLISP_DIR=$SWIQLISP_DIR/quicklisp
QUICKSTART_FILE=$SWIQLISP_DIR/quicklisp.lisp
LISP_ERRLOG=$SWIQLISP_DIR/lisp-error.log

cp -f swiqlisp.lisp $SWIQLISP_DIR  # force copying allows for updates
if test -d $QUICKLISP_DIR; then
    echo "Site-wide Quicklisp is already installed."
    exit 1
fi
# fetch Quicklisp quickstart file (overwrites any existing quickstart file)
if test $VERBOSE = on; then
    wget -O $QUICKSTART_FILE http://beta.quicklisp.org/quicklisp.lisp
else
    echo "Fetching Quicklisp quickstart file from quicklisp.org ..."
    wget -q -O $QUICKSTART_FILE http://beta.quicklisp.org/quicklisp.lisp
fi
# setup installed-systems files
touch $SWIQLISP_DIR/installed-systems.current
touch $SWIQLISP_DIR/installed-systems.new
touch $SWIQLISP_DIR/installed-systems.old
# setup installed-systems dir
mkdir -p $SWIQLISP_DIR/installed-systems

#-----------------------------------------------------------------------------
# install Quicklisp
LISP_COMMAND='$SU -c "$INVOC $COMMANDS"'
# INVOC is defined in swiqlisp-<impl> files
EVAL="'(quicklisp-quickstart:install :path \"$SWIQLISP_PATHNAME\")'"
if test $VERBOSE = on; then
    COMMANDS="$load $QUICKSTART_FILE $eval $EVAL $quit 2>$LISP_ERRLOG"
else
    echo "Installing Quicklisp site-wide ..."
    COMMANDS="$load $QUICKSTART_FILE $eval $EVAL $quit 1>/dev/null 2>$LISP_ERRLOG"
fi
if test $DEBUG = on; then
    # write the command for visual inspection
    eval echo $LISP_COMMAND; fi
# go!
eval $LISP_COMMAND
# check for errors
if test -s $LISP_ERRLOG; then
    echo "An error occurred.  See $LISP_ERRLOG for details."
    exit 1
else # success
    rm $LISP_ERRLOG # empty
    rm $QUICKSTART_FILE
    echo "Site-wide Quicklisp installed under $SWIQLISP_DIR."
fi

#-----------------------------------------------------------------------------
# write/remove init file stanza
init_file_stanza_start=';;; swiQlisp stanza begin - DO NOT EDIT this comment'
init_file_stanza_end=';;; swiQlisp stanza end - DO NOT EDIT this comment'
# line numbers
existing_stanza_start=$(grep -xne "$init_file_stanza_start" $SYSINIT_FILE |\
                        cut -d: -f1)
existing_stanza_end=$(grep -xne "$init_file_stanza_end" $SYSINIT_FILE |\
                      cut -d: -f1)

if test -n "$existing_stanza_start" -a -n "$existing_stanza_end"; then
    # swiqlisp stanza exists
    ask "Your system-wide init file ($SYSINIT_FILE) already includes
the swiQlisp stanza:

$INIT_FILE_STANZA

Remove it"
    if test "$ans" = "y" -o "$ans" = "Y"; then
	sed_script="${existing_stanza_start},${existing_stanza_end}d"
	sed -i $sed_script $SYSINIT_FILE
	echo "swiQlisp stanza removed."
    else
	echo "File untouched."
    fi
else
    # no swiqlisp stanza exists
    ask "Append

$INIT_FILE_STANZA

to the system-wide init file ($SYSINIT_FILE)"

    if test "$ans" = "y" -o "$ans" = "Y"; then
	echo "
$init_file_stanza_start
$INIT_FILE_STANZA
$init_file_stanza_end
" >> $SYSINIT_FILE
	echo "swiQlisp stanza added."
    else
	echo "File untouched."
    fi
fi
