#!/bin/bash

# Copyright © 2011 Sebastian D. Tennant <sdt@sebyte.me>
#
# This file is part of swiQlisp — site-wide Quicklisp.
#
# swiQlisp is free software: you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# swiQlisp is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# swiQlisp.  If not, see <http://www.gnu.org/licenses/>

# Commentary:
#
#  This script (swiqlisp-install) is the site-wide Quicklisp installation tool,
#  typically only used once.
#
#  Use the script 'swiqlisp' to manage your site-wide Quicklisp installation on
#  a day-to-day basis.

#-------------------------------------------------------------------------------
# utility function
ensure_no_trailing_slash () {
    if test ${1: -1} = /; then echo -n ${1:0: -1}
    else echo -n $1
    fi ; }

#-------------------------------------------------------------------------------
# source ./swiqlisp.rc, ./swiqlisp-utils & perform sanity checks

source swiqlisp.rc
source swiqlisp-utils
check_help $1 "Usage: sudo ./swiqlisp-install"
check_root_privileges
check_lisp_and_setup_accordingly

# remove trailing slash in SYSUSR_HOME (if any)
SYSUSR_HOME=$(ensure_no_trailing_slash $SYSUSR_HOME)

# check that SYSUSR_HOME parent directory exists and create it if necessary.
# SYSUSR_HOME itself is created by the adduser command below.
if test ! -d $(dirname $SYSUSR_HOME); then
    mkdir -p $(dirname $SYSUSR_HOME)
fi

# debugging
if test $DEBUG = on; then
    echo "debug: SYSUSR=$SYSUSR"
    echo "debug: SYSUSR_HOME=$SYSUSR_HOME";
fi;

#-------------------------------------------------------------------------------
# Create and populate SYSUSR_HOME

if test -z "$(id -u $SYSUSR 2>/dev/null)"; then
    # no existing SYSUSR so remove any old SYSUSR_HOME which may exist and
    # create SYSUSR and SYSUSR_HOME anew
    rm -rf $SYSUSR_HOME
    if test $VERBOSE = on; then
	adduser --system --home $SYSUSR_HOME --shell /bin/sh \
                --disabled-login $SYSUSR
    else
	adduser --quiet --system --home $SYSUSR_HOME --shell /bin/sh \
                --disabled-login $SYSUSR
    fi
    echo \
"Created system user $SYSUSR with ID $(id -u $SYSUSR) and \
home directory $SYSUSR_HOME."
else
    if test ! -d $SYSUSR_HOME; then
	# pre-existing SYSUSR user but no SYSUSR home
	usermod --home $SYSUSR_HOME $SYSUSR
	echo \
"Created home directory $SYSUSR_HOME for existing system user $SYSUSR \
with ID $(id -u $SYSUSR)."
    else
        # pre-existing SYSUSR and SYSUSR_HOME
	echo \
"System user $SYSUSR with ID $(id -u $SYSUSR) and home directory \
$SYSUSR_HOME already exists.  Leaving both untouched."
    fi
fi

QUICKLISP_DIR=$SYSUSR_HOME/quicklisp
QUICKSTART_FILE=$SYSUSR_HOME/quicklisp.lisp
LISP_ERRLOG=$SYSUSR_HOME/tmp/log/lisp-error.log

if test -d $QUICKLISP_DIR; then
    echo "Site-wide Quicklisp is already installed."
    exit 1
fi

# fetch Quicklisp quickstart file (overwrites any existing quickstart file)
if test $VERBOSE = on; then
    wget -O $QUICKSTART_FILE http://beta.quicklisp.org/quicklisp.lisp
else
    echo "Fetching Quicklisp quickstart file from quicklisp.org ..."
    wget -q -O $QUICKSTART_FILE http://beta.quicklisp.org/quicklisp.lisp
fi


# setup tmp directory
mkdir -p $SYSUSR_HOME/tmp
mkdir -p $SYSUSR_HOME/tmp/log
# initialise installed-systems files
touch $SYSUSR_HOME/tmp/installed-systems.current \
      $SYSUSR_HOME/tmp/installed-systems.added \
      $SYSUSR_HOME/tmp/installed-systems.removed \
      $SYSUSR_HOME/tmp/installed-systems.old

# setup installed-systems dir
mkdir -p $SYSUSR_HOME/installed-systems

# copy files
cp -f \
    swiqlisp-sbcl \
    swiqlisp-slime-helper.el \
    swiqlisp-utils \
    swiqlisp.lisp \
    $SYSUSR_HOME

# no harm in this blanket chown
chown -R $SYSUSR:nogroup $SYSUSR_HOME

#-------------------------------------------------------------------------------
# /etc, /usr/bin

# init file
cp -f swiqlisp.rc        /etc
# main script & uninstallation script
cp -f swiqlisp           /usr/bin
cp -f swiqlisp-uninstall /usr/bin
# should already be executable
chmod a+x /usr/bin/swiqlisp /usr/bin/swiqlisp-uninstall

#-------------------------------------------------------------------------------
# Install Quicklisp

LISP_COMMAND='$SU -c "$INVOC $COMMANDS" $SYSUSR'
# INVOC is defined in swiqlisp-<impl> files

EVAL="'(quicklisp-quickstart:install)'"

if test $VERBOSE = on; then
    COMMANDS="$load $QUICKSTART_FILE $eval $EVAL $quit 2>$LISP_ERRLOG"
else
    echo "Installing Quicklisp site-wide ..."
    COMMANDS="$load $QUICKSTART_FILE $eval $EVAL $quit 1>/dev/null 2>$LISP_ERRLOG"
fi
[ $DEBUG = on ] && eval echo "debug: $LISP_COMMAND"

# run lisp
eval $LISP_COMMAND

# check for errors
if test -s $LISP_ERRLOG; then
    echo "An error occurred.  See $LISP_ERRLOG for details."
    exit 1
else # success
    rm $LISP_ERRLOG # empty
    rm $QUICKSTART_FILE
    echo "Site-wide Quicklisp installed under $SYSUSR_HOME."
fi

#-------------------------------------------------------------------------------
# final steps
add_remove_swiqlisp_stanza
sleep 1
slime_helper_message

echo "swiQlisp successfully installed."

# Local Variables:
# page-delimiter: "^#[=-]+$"
# End:
