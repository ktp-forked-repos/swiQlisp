#!/bin/bash
# -*- page-delimiter: "^#" -*-

# Copyright © 2011 Sebastian D. Tennant <sdt@sebyte.me>
#
# This file is part of swiQlisp — site-wide Quicklisp.
#
# swiQlisp is free software: you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# swiQlisp is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# swiQlisp.  If not, see <http://www.gnu.org/licenses/>


# Commentary:
#
#  This script (swiqlisp) is the main tool for managing your site-wide
#  installation of Quicklisp.
#
#  Use the script swiqlisp-install to install Quicklisp site-wide in the first
#  instance.

#-----------------------------------------------------------------------------
#set -e				# grep returns exit code 1 if no matches are found
source swiqlisp.rc
source swiqlisp-utils

ACTION=$1; OBJECT=$2
usage="Usage: sudo ./swiqlisp <action> [<object>]"
help_requested "$usage"
if test \( "${ACTION:0:7}" = "install" -o "${ACTION:0:6}" = "remove" \) -a \
        -z "$OBJECT"; then
    echo "$usage"; exit 0
fi

check_root # FIXME - unprivileged users should be able to do some things
swiqlisp_paths
lisp_setup
LISP_COMMAND='$SU -c "$INVOC $load $SWIQLISP_DIR/setup $load swiqlisp.lisp $COMMANDS"'

#-----------------------------------------------------------------------------
# shell functions
rotate_installed_systems_files () {
    echo -n "" > $SWIQLISP_DIR/installed-systems.added
    echo -n "" > $SWIQLISP_DIR/installed-systems.removed
    mv -f $SWIQLISP_DIR/installed-systems.current \
	$SWIQLISP_DIR/installed-systems.old
    # FIXME - how to handle multiple dists?
    cat $SWIQLISP_DIR/dists/quicklisp/installed/systems/*.txt | sort \
	> $SWIQLISP_DIR/installed-systems.current
    # systems that have just been added
    grep -v -f $SWIQLISP_DIR/installed-systems.old \
	$SWIQLISP_DIR/installed-systems.current \
	> $SWIQLISP_DIR/installed-systems.added
    # systems that have just been removed
    grep -v -f $SWIQLISP_DIR/installed-systems.current \
	$SWIQLISP_DIR/installed-systems.old \
	> $SWIQLISP_DIR/installed-systems.removed; }

write_links_to_additional_system_files () {
    for system in $(cat $SWIQLISP_DIR/installed-systems.added); do
	ln -s  ../$system $SWIQLISP_DIR/installed-systems/
    done; }

remove_links_to_removed_system_files () {
    for system in $(cat $SWIQLISP_DIR/installed-systems.removed); do
	echo remove me - $system
    done; }

refresh_system_links () {
    # for debugging purposes only
    rm -f $SWIQLISP_DIR/installed-systems/*.asd
    for system in $(cat $SWIQLISP_DIR/installed-systems.current); do
	ln -s  ../$system $SWIQLISP_DIR/installed-systems/
    done; }

#-----------------------------------------------------------------------------
# lisp functions

list () {
    EVAL1="'(list-installed-$1)'"
    EVAL2="'(list-available-$1)'"
    COMMANDS="$eval $EVAL1 $eval $EVAL2 $quit"
    if test $DEBUG = on; then eval echo $LISP_COMMAND | tr -s \ ; fi
    eval $LISP_COMMAND; }

system_apropos () {
    EVAL="'(swiqlisp-apropos \"$OBJECT\")'"
    COMMANDS="$eval $EVAL $quit"
    if test $DEBUG = on; then eval echo $LISP_COMMAND | tr -s \ ; fi
    eval $LISP_COMMAND; }

additional_systems_report () {
    EVAL="'(additional-systems-report)'"
    COMMANDS="$eval $EVAL $quit"
    if test $DEBUG = on; then eval echo $LISP_COMMAND | tr -s \ ; fi
    eval $LISP_COMMAND; }

install () {
    EVAL="'(install-$1 \"$OBJECT\")'"
    ERRLOG="/tmp/install-${1}_${OBJECT}_error.log"
    COMMANDS="$eval $EVAL $quit 2>$ERRLOG"
    if test $DEBUG = on; then eval echo $LISP_COMMAND | tr -s \ ; fi
    eval $LISP_COMMAND
    if [ -s $ERRLOG ]; then
	echo -e "\n\nAn error occurred. See $ERRLOG for more information.\n"
	exit 1
    else # success
	rm $ERRLOG # empty
	rotate_installed_systems_files
	write_links_to_additional_system_files
	additional_systems_report
    fi; }

# if test -s $SWIQLISP_DIR/installed-systems.added; then
# fi

#-----------------------------------------------------------------------------
# top level

case $ACTION in
           projects) list projects;;
            systems) list systems;;
    project-systems) list project_systems;; # unimplemented
    install-project) install project;;
     install-system) install system;;
     remove-project) remove_system;;        # unimplemented
      remove-system) remove_system;;	    # unimplemented
     system-apropos) system_apropos;;
   refresh-syslinks) refresh_system_links;;
                  *) echo "Unknown action.  Aborting." && exit 1;;
esac
